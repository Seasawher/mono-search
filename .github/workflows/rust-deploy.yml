name: Create Release and Deploy

on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]

jobs:
  nightly:
    name: Create Release and Deploy
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose --release
      - name: Get Directory
        run: Get-ChildItem -Recurse -Filter "mono_search"
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: mono_search.exe
          path: target/release/mono_search
          if-no-files-found: error
      - name: Deploy Windows release
        if: matrix.os == 'windows-latest'
        uses: WebFreak001/deploy-nightly@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
        with:
          upload_url: https://uploads.github.com/repos/Seasawher/mono-search/releases/108142419/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
          release_id: 108142419 # same as above (id can just be taken out the upload_url, it's used to find old releases)
          asset_path: target/release/mono_search # path to archive to upload
          asset_name: mono-search-nightly-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/zip # required by GitHub API
          max_releases: 7 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
